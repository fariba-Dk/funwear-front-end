{"ast":null,"code":"var _jsxFileName = \"/Users/faribadadko/Documents/funwear-front-end/funwear-fashion/src/components/Cart.js\";\nimport React, { Component } from 'react';\nimport formatCurrency from '../util';\nimport Fade from 'react-reveal/Fade';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Cart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.createOrder = event => {\n      event.preventDefault();\n      const order = {\n        name: this.state.name,\n        email: this.state.email,\n        address: this.state.address,\n        cartItems: this.props.cartItems\n      };\n      this.props.createOrder(order); //pass in order object = this is not responsible for saving this the PARENT at App.js should\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      address: '',\n      showCheckout: false //by default we do not like to show checkout unless user click on Proceed\n\n    };\n  }\n\n  render() {\n    const {\n      cartItems\n    } = this.props; //deconstructing assignment\n    //from parent component,we get cartItems here, if method\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [cartItems.length === 0 ?\n      /*#__PURE__*/\n      //1st div: showing cart-data\n      //if cartItem is empty\n      //using 2 className here 1. cart 2. cart-header\n      _jsxDEV(\"div\", {\n        className: \"cart cart-header\",\n        children: \"Cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      //else if cart is not empty => show num of items\n      _jsxDEV(\"div\", {\n        className: \"cart cart-header\",\n        children: [\"You have \", cartItems.length, \" in the cart\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart\",\n          children: /*#__PURE__*/_jsxDEV(Fade, {\n            left: true,\n            cascade: true,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"cart-items\",\n              children: cartItems.map((item //2nd div: showing cart-data\n              ) =>\n              /*#__PURE__*/\n              //we map thru cartItems and convert cartItems to li elms; here we set key=item._id and inside the li we need to form rows for: image & title & price - all with dif <div> + a button to remove any items - IMP: make it an arrow func\n              //NOTE: we use item which is element of cartItems not the cartItems itself\n              _jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.image,\n                    alt: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"right\",\n                    children: [formatCurrency(item.price), \" x \", item.count, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"button\",\n                      onClick: () => this.props.removeFromCart(item),\n                      children: \"Remove\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 23\n                }, this)]\n              }, item._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), cartItems.length !== 0 &&\n        /*#__PURE__*/\n        //this allows for hidden button => use conditional rendering=> if !== 0 else its empty\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Total:\", ' ', formatCurrency( //use reduce method to add price and use formatCurrency\n                cartItems.reduce((a, c) => a + c.price * c.count, 0))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  //when user click on button Proceed, we need to update === setState to true ** make sure to add to this.state in constructor showCheckout: false === we do not want to show check out by default\n                  this.setState({\n                    showCheckout: true\n                  });\n                },\n                className: \"button primary\",\n                children: \"Proceed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), this.state.showCheckout &&\n          /*#__PURE__*/\n          //if it is true => proceed to <div and create FORM and an onSubmit button\n          _jsxDEV(\"div\", {\n            className: \"cart\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.createOrder,\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"form-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"email\",\n                    type: \"email\",\n                    required: true //it is required and onChange we define a function to handle input\n                    //when user click on handle input we need to create a function handleInput\n                    //a method function that accepts an event and we can access\n                    ,\n                    onChange: this.handleInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"name\",\n                    type: \"text\",\n                    required: true //it is required and onChange we define a function to handle input\n                    ,\n                    onChange: this.handleInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"address\",\n                    type: \"text\",\n                    required: true,\n                    onChange: this.handleInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button primary\",\n                    type: \"submit\",\n                    children: \"Checkout\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/faribadadko/Documents/funwear-front-end/funwear-fashion/src/components/Cart.js"],"names":["React","Component","formatCurrency","Fade","Cart","constructor","props","handleInput","event","setState","target","name","value","createOrder","preventDefault","order","state","email","address","cartItems","showCheckout","render","length","map","item","image","title","price","count","removeFromCart","_id","reduce","a","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport formatCurrency from '../util';\nimport Fade from 'react-reveal/Fade'\n\nexport default class Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      address: '',\n      showCheckout: false, //by default we do not like to show checkout unless user click on Proceed\n    };\n  }\n\n  handleInput = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  //onSubmit handler - we use preventDefault because we don't want to refresh the page when user is clicking on submit\n  createOrder = (event) => {\n    event.preventDefault();\n    const order = {\n      name: this.state.name,\n      email: this.state.email,\n      address: this.state.address,\n      cartItems: this.props.cartItems,\n    };\n    this.props.createOrder(order);//pass in order object = this is not responsible for saving this the PARENT at App.js should\n  };\n\n  render() {\n    const { cartItems } = this.props; //deconstructing assignment\n    //from parent component,we get cartItems here, if method\n    return (\n      <div>\n        {cartItems.length === 0 ? ( //1st div: showing cart-data\n          //if cartItem is empty\n          //using 2 className here 1. cart 2. cart-header\n          <div className='cart cart-header'>Cart is empty</div>\n        ) : (\n          //else if cart is not empty => show num of items\n          <div className='cart cart-header'>\n            You have {cartItems.length} in the cart{' '}\n          </div>\n        )}\n        <div>\n          <div className='cart'>\n            <Fade left cascade>\n              <ul className='cart-items'>\n                {cartItems.map(\n                  (\n                    item //2nd div: showing cart-data\n                  ) => (\n                    //we map thru cartItems and convert cartItems to li elms; here we set key=item._id and inside the li we need to form rows for: image & title & price - all with dif <div> + a button to remove any items - IMP: make it an arrow func\n                    //NOTE: we use item which is element of cartItems not the cartItems itself\n                    <li key={item._id}>\n                      <div>\n                        <img src={item.image} alt={item.title}></img>\n                      </div>\n                      <div>\n                        <div>{item.title}</div>\n                        <div className='right'>\n                          {formatCurrency(item.price)} x {item.count}{' '}\n                          <button\n                            className='button'\n                            onClick={() => this.props.removeFromCart(item)}\n                          >\n                            Remove\n                          </button>\n                        </div>\n                      </div>\n                    </li>\n                  )\n                )}\n              </ul>\n            </Fade>\n          </div>\n          {cartItems.length !== 0 && ( //this allows for hidden button => use conditional rendering=> if !== 0 else its empty\n            <div>\n              <div className='cart'>\n                <div className='total'>\n                  <div>\n                    Total:{' '}\n                    {formatCurrency(\n                      //use reduce method to add price and use formatCurrency\n                      cartItems.reduce((a, c) => a + c.price * c.count, 0)\n                    )}\n                  </div>\n                  <button\n                    onClick={() => {\n                      //when user click on button Proceed, we need to update === setState to true ** make sure to add to this.state in constructor showCheckout: false === we do not want to show check out by default\n                      this.setState({ showCheckout: true });\n                    }}\n                    className='button primary'\n                  >\n                    Proceed\n                  </button>\n                </div>\n              </div>\n              {this.state.showCheckout && ( //if it is true => proceed to <div and create FORM and an onSubmit button\n              \n                <div className='cart'>\n                  <form onSubmit={this.createOrder}>\n\n                    <ul className='form-container'>\n                      <li>\n                        <label>Email</label>\n                        <input\n                          name='email'\n                          type='email'\n                          required //it is required and onChange we define a function to handle input\n                          //when user click on handle input we need to create a function handleInput\n                          //a method function that accepts an event and we can access\n                          onChange={this.handleInput}\n                        ></input>\n                      </li>\n                      <li>\n                        <label>Name</label>\n                        <input\n                          name='name'\n                          type='text'\n                          required //it is required and onChange we define a function to handle input\n                          onChange={this.handleInput}\n                        ></input>\n                      </li>\n                      <li>\n                        <label>Address</label>\n                        <input\n                          name='address'\n                          type='text'\n                          required\n                          onChange={this.handleInput}\n                        ></input>\n                      </li>\n                      <li>\n                        <button className='button primary' type='submit'>\n                          Checkout\n                        </button>\n                      </li>\n                    </ul>\n                  </form>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}