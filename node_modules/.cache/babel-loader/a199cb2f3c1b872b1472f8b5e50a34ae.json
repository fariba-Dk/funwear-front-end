{"ast":null,"code":"var _jsxFileName = \"/Users/faribadadko/Documents/funwear-front-end/funwear-fashion/src/App.js\";\nimport React from 'react';\nimport data from './data.json';\nimport Products from './components/Products';\nimport Filter from './components/Filter';\nimport Cart from './components/Cart';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.sortProducts = event => {\n      //function used to handle onchange event for sorting\n      //CONVERTING TO CHANGE FUNC TO METHOD FUNC WE CAN ACCESS THIS.SET-STATE\n      const sort = event.target.value;\n      console.log(event.target.value);\n      this.setState(state => ({\n        sort: sort,\n        //need to get access to filtered product\n        //create a clone of array\n        products: this.state.products.slice().sort((a, b) => sort === 'lowest' ? a.price > b.price ? 1 : -1 : sort === 'highest' ? a.price < b.price ? 1 : -1 //newest _id is greater num than the oldest one\n        : a._id < b._id ? 1 : -1)\n      }));\n    };\n\n    this.filterProducts = event => {\n      //function handling onchange event thru filtering thru the sizes\n      //CONVERTING TO CHANGE FUNC TO METHOD FUNC WE CAN ACCESS THIS.SET-STATE\n      //THE VALUE OF SIZE IS event.target.value\n      let size = event.target.value;\n\n      if (size === '') {\n        this.setState({\n          size: size,\n          products: data.products //All products\n\n        });\n      } else {\n        this.setState({\n          size: size,\n          //for products using filter method\n          //checking for size! if > 0 => the size exists\n          products: data.products.filter(product => product.availableSizes.indexOf(size) >= 0)\n        });\n      }\n    };\n\n    this.addToCart = product => {\n      //clone-copy of cartItems using slice\n      const cartItems = this.state.cartItems.slice();\n      let alreadyInCart = false; //using forEach arr method to iterate over cartItems arr\n\n      cartItems.forEach(item => {\n        //if _id exists then ++\n        if (item._id === product._id) {\n          item.count++; //set flag to true\n\n          alreadyInCart = true;\n        }\n      }); //if prod is not in the cart => push the prod inside cart\n\n      if (!alreadyInCart) {\n        //instead of having product we are using the fields of prods using spread to get the fields - an instance of this product\n        cartItems.push({ ...product,\n          count: 1\n        });\n      } //after adding new items we need to update state\n\n\n      this.setState({\n        cartItems\n      }); //to make the cart stay PRESERVED => after adding items and setting state, use setItem(key: string, value: string) but since cartItems is an OBJECT so we use JSON.stringify to convert obj to string AS WELL AS REMOVING THE ITEMS TOO\n      //this.state\n\n      localStorage.setItem('cartItems', JSON.stringify(this.state.cartItems));\n    };\n\n    this.removeFromCart = product => {\n      //create a copy -an instance of cartItems\n      const cartItems = this.state.cartItems.slice();\n      this.setState({\n        cartItems: cartItems.filter(x => x._id !== product._id)\n      }); //have to preserve the cart for remove as well\n\n      localStorage.setItem('cartItems', JSON.stringify(cartItems.filter(x => x._id !== product._id)));\n    };\n\n    this.state = {\n      products: data.products,\n      //by default there is no item in cart\n      //cartItems: [], we change JSON.parse to reverse JSON.stringify\n      cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n      //else empty array\n      //have to check if string cartItems exists => parse it, else []\n      size: '',\n      //filter thru all sizes\n      sort: '' //sort thru $ and $$$\n\n    };\n  } //SORT METHOD ON LOWEST/HIGHEST/NEWEST\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"FunWear\\uD83C\\uDF3CFashion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main\",\n            children: [/*#__PURE__*/_jsxDEV(Filter //passing count & sort & size as props to Filter\n            , {\n              count: this.state.products.length,\n              sort: this.state.sort,\n              size: this.state.size // functions handling onChange events\n              ,\n              sortProducts: this.sortProducts,\n              filterProducts: this.filterProducts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Products, {\n              products: this.state.products //adding we define addToCart as a property\n              //this.addToCart is responsible for it\n              ,\n              addToCart: this.addToCart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar\",\n            children: /*#__PURE__*/_jsxDEV(Cart //the cartItems comes from this.state.cartItems\n            , {\n              cartItems: this.state.cartItems,\n              removeFromCart: this.removeFromCart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: \"\\xA9 All right is reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/faribadadko/Documents/funwear-front-end/funwear-fashion/src/App.js"],"names":["React","data","Products","Filter","Cart","App","Component","constructor","sortProducts","event","sort","target","value","console","log","setState","state","products","slice","a","b","price","_id","filterProducts","size","filter","product","availableSizes","indexOf","addToCart","cartItems","alreadyInCart","forEach","item","count","push","localStorage","setItem","JSON","stringify","removeFromCart","x","getItem","parse","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport data from './data.json';\nimport Products from './components/Products';\nimport Filter from './components/Filter';\nimport Cart from './components/Cart';\nimport './index.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      products: data.products,\n      //by default there is no item in cart\n      //cartItems: [], we change JSON.parse to reverse JSON.stringify\n      cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [], //else empty array\n      //have to check if string cartItems exists => parse it, else []\n      size: '', //filter thru all sizes\n      sort: '', //sort thru $ and $$$\n    };\n  }\n\n  //SORT METHOD ON LOWEST/HIGHEST/NEWEST\n  sortProducts = (event) => {\n    //function used to handle onchange event for sorting\n    //CONVERTING TO CHANGE FUNC TO METHOD FUNC WE CAN ACCESS THIS.SET-STATE\n    const sort = event.target.value;\n    console.log(event.target.value);\n    this.setState((state) => ({\n      sort: sort,\n      //need to get access to filtered product\n      //create a clone of array\n      products: this.state.products\n        .slice()\n        .sort((a, b) =>\n          sort === 'lowest'\n            ? a.price > b.price\n              ? 1\n              : -1\n            : sort === 'highest'\n            ? a.price < b.price\n              ? 1\n              : -1\n              //newest _id is greater num than the oldest one\n            : a._id < b._id\n            ? 1\n            : -1\n        ),\n    }));\n  };\n\n  //FILTER METHOD ON SIZE\n  filterProducts = (event) => {\n    //function handling onchange event thru filtering thru the sizes\n    //CONVERTING TO CHANGE FUNC TO METHOD FUNC WE CAN ACCESS THIS.SET-STATE\n    //THE VALUE OF SIZE IS event.target.value\n    let size = event.target.value;\n    if (size === '') {\n      this.setState({\n        size: size,\n        products: data.products, //All products\n      });\n    } else {\n      this.setState({\n        size: size,\n        //for products using filter method\n        //checking for size! if > 0 => the size exists\n        products: data.products.filter(\n          (product) => product.availableSizes.indexOf(size) >= 0\n        ),\n      });\n    }\n  };\n\n  //ADD TO CART - method\n  addToCart = (product) => {\n    //clone-copy of cartItems using slice\n    const cartItems = this.state.cartItems.slice();\n    let alreadyInCart = false;\n    //using forEach arr method to iterate over cartItems arr\n    cartItems.forEach((item) => {\n      //if _id exists then ++\n      if (item._id === product._id) {\n        item.count++;\n        //set flag to true\n        alreadyInCart = true;\n      }\n    });\n    //if prod is not in the cart => push the prod inside cart\n    if (!alreadyInCart) {\n      //instead of having product we are using the fields of prods using spread to get the fields - an instance of this product\n      cartItems.push({ ...product, count: 1 });\n    }//after adding new items we need to update state\n    this.setState({ cartItems });\n    //to make the cart stay PRESERVED => after adding items and setting state, use setItem(key: string, value: string) but since cartItems is an OBJECT so we use JSON.stringify to convert obj to string AS WELL AS REMOVING THE ITEMS TOO\n    //this.state\n    localStorage.setItem('cartItems', JSON.stringify(this.state.cartItems))\n  };\n\n  //REMOVE FROM CART\n  removeFromCart = (product) => {\n    //create a copy -an instance of cartItems\n    const cartItems = this.state.cartItems.slice();\n    this.setState({\n      cartItems: cartItems.filter((x) => x._id !== product._id),\n    });//have to preserve the cart for remove as well\n    localStorage.setItem(\n      'cartItems',\n      JSON.stringify(cartItems.filter((x) => x._id !== product._id))\n    );\n  };\n\n  render() {\n    return (\n      <div className='grid-container'>\n        <header>\n          <a href='/'>FunWear🌼Fashion</a>\n        </header>\n        <main>\n          <div className='content'>\n            <div className='main'>\n              <Filter\n                //passing count & sort & size as props to Filter\n                count={this.state.products.length}\n                sort={this.state.sort}\n                size={this.state.size}\n                // functions handling onChange events\n                sortProducts={this.sortProducts}\n                filterProducts={this.filterProducts}\n              ></Filter>\n              <Products\n                products={this.state.products}\n                //adding we define addToCart as a property\n                //this.addToCart is responsible for it\n                addToCart={this.addToCart}\n              ></Products>\n            </div>\n            <div className='sidebar'>\n              <Cart\n\n              //the cartItems comes from this.state.cartItems\n                cartItems={this.state.cartItems}\n                removeFromCart={this.removeFromCart}\n              />\n\n            </div>\n          </div>\n        </main>\n        <footer>© All right is reserved.</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}