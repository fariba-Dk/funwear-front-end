{"ast":null,"code":"import _defineProperty from\"/Users/faribadadko/Documents/FunWear\\uD83C\\uDF3CFashion/funwear-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/faribadadko/Documents/FunWear\\uD83C\\uDF3CFashion/funwear-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/faribadadko/Documents/FunWear\\uD83C\\uDF3CFashion/funwear-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/faribadadko/Documents/FunWear\\uD83C\\uDF3CFashion/funwear-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/faribadadko/Documents/FunWear\\uD83C\\uDF3CFashion/funwear-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import formatCurrency from'../util';import Fade from'react-reveal/Fade';import Modal from'react-modal';import Zoom from'react-reveal/Zoom';//for modals we need to have 2 state show or hide\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Products=/*#__PURE__*/function(_Component){_inherits(Products,_Component);var _super=_createSuper(Products);function Products(props){var _this;_classCallCheck(this,Products);_this=_super.call(this,props);_this.openModal=function(product){_this.setState({product:product});//by running this we set as the product of the stat of the component\n};_this.closeModal=function(){_this.setState({product:null});};_this.state={product:null,//if product exists show it else if null do not show modal\n//create an onClick for image === HAS TO BE AN ARROW FUNC\n//openModal takes parameter (product) and prefix with this\n//we need a method function openModal\nshowPromo:true};return _this;}// componentDidMount(){//call fetchProducts from props\n//   this.props.fetchProducts();\n// }\n_createClass(Products,[{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,product=_this$state.product,showPromo=_this$state.showPromo;//use constructor assignment\nreturn/*#__PURE__*/ (//implement product list - arr - map method\n_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Modal,{isOpen:showPromo,style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.setState({showPromo:false});},children:\"x\"}),/*#__PURE__*/_jsx(\"img\",{src:\"/images/discount-pic.gif\",alt:\"discount promo\",style:{width:'100%'}})]}),/*#__PURE__*/_jsx(Fade,{bottom:true,cascade:true,children:/*#__PURE__*/_jsx(\"ul\",{className:\"products\",children:this.props.products.map(function(product){var _jsx2;return/*#__PURE__*/ (// //get list of products as props from parent comp\n_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"product\",children:[/*#__PURE__*/_jsxs(\"a\",{href:'#'+product._id,onClick:function onClick(){return _this2.openModal(product);},children:[/*#__PURE__*/_jsx(\"img\",{src:product.image,alt:product.title}),/*#__PURE__*/_jsx(\"p\",{children:product.title})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"product-price\",children:[/*#__PURE__*/_jsx(\"div\",{children:formatCurrency(product.price)}),/*#__PURE__*/_jsx(\"button\",(_jsx2={className:\"button-primary\",onClick:function onClick(){return _this2.props.addToCart(product);}},_defineProperty(_jsx2,\"className\",\"button primary\"),_defineProperty(_jsx2,\"children\",\"Add To Cart\"),_jsx2))]})]})},product._id));})})}),product&&/*#__PURE__*/ //when there's a product this modal is rendered ** also make sure to create a button to close it using 'x'\n_jsx(Modal,{isOpen:true,onRequestClose:this.closeModal,children:/*#__PURE__*/_jsxs(Zoom,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"close-modal\",onClick:this.closeModal,children:\"x\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"product-details\",children:[/*#__PURE__*/_jsx(\"img\",{src:product.image,alt:product.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"product-details-description\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:product.title})}),/*#__PURE__*/_jsx(\"p\",{children:product.description}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Available Sizes:\",' ',product.availableSizes.map(function(x//availableSizes is an array\n){return/*#__PURE__*/_jsxs(\"span\",{children:[' ',/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:x})]});})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"product-price\",children:[/*#__PURE__*/_jsx(\"div\",{children:formatCurrency(product.price)}),/*#__PURE__*/_jsx(\"button\",{className:\"button primary\",onClick:function onClick(){//before closingModal make sure have this.props.addToCart method\n_this2.props.addToCart(product);_this2.closeModal();},children:\"Add To Cart\"})]})]})]})]})})]}));}}]);return Products;}(Component);//redux part\n// export default connect((state) => ({ products: state.products.items }), { //getting access to list of products coming from server\n//   fetchProducts,\n// })(Products);\n/*\nCONNECT is a function that takes 2 params\n1. function that accepts state and => return an obj that defines which part of redux state are we going to use === products === state.products\n2. list of actions\n\nconnect func => returns another function which as paramter takes the component that we are connecting here ==== Product/js\n\nin JSON.data we need to set a proxy\nserver is localhost:5000\n*/export{Products as default};","map":{"version":3,"sources":["/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/components/Products.js"],"names":["React","Component","formatCurrency","Fade","Modal","Zoom","Products","props","openModal","product","setState","closeModal","state","showPromo","textAlign","width","products","map","_id","image","title","price","addToCart","description","availableSizes","x"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport formatCurrency from '../util';\nimport Fade from 'react-reveal/Fade';\nimport Modal from 'react-modal';\nimport Zoom from 'react-reveal/Zoom';\n\n//for modals we need to have 2 state show or hide\nexport default class Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: null,\n      //if product exists show it else if null do not show modal\n      //create an onClick for image === HAS TO BE AN ARROW FUNC\n      //openModal takes parameter (product) and prefix with this\n      //we need a method function openModal\n      showPromo: true,\n    };\n  }\n  // componentDidMount(){//call fetchProducts from props\n  //   this.props.fetchProducts();\n  // }\n  openModal = (product) => {\n    this.setState({ product });\n    //by running this we set as the product of the stat of the component\n  };\n  closeModal = () => {\n    this.setState({ product: null });\n  };\n  render() {\n    const { product, showPromo } = this.state; //use constructor assignment\n    return (\n      //implement product list - arr - map method\n      <div>\n        <Modal isOpen={showPromo} style={{ textAlign: 'center' }}>\n          <button onClick={() => this.setState({ showPromo: false })}>x</button>\n          <img\n            src='/images/discount-pic.gif'\n            alt='discount promo'\n            style={{ width: '100%' }}\n          />\n        </Modal>\n        <Fade bottom cascade={true}>\n          <ul className='products'>\n            {this.props.products.map((product) => (\n              // //get list of products as props from parent comp\n              <li key={product._id}>\n                <div className='product'>\n                  <a\n                    href={'#' + product._id}\n                    onClick={() => this.openModal(product)}\n                  >\n                    <img src={product.image} alt={product.title}></img>\n                    <p>{product.title}</p>\n                  </a>\n                  <div className='product-price'>\n                    <div>{formatCurrency(product.price)}</div>\n                    <button\n                      className='button-primary'\n                      onClick={() => this.props.addToCart(product)}\n                      className='button primary'\n                    >\n                      Add To Cart\n                    </button>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </Fade>\n        {product && ( //when there's a product this modal is rendered ** also make sure to create a button to close it using 'x'\n          <Modal isOpen={true} onRequestClose={this.closeModal}>\n            <Zoom>\n              <button className='close-modal' onClick={this.closeModal}>\n                x\n              </button>\n              <div className='product-details'>\n                <img src={product.image} alt={product.title}></img>\n                <div className='product-details-description'>\n                  <p>\n                    <strong>{product.title}</strong>\n                  </p>\n\n                  <p>{product.description}</p>\n\n                  <p>\n                    Available Sizes:{' '}\n                    {product.availableSizes.map(\n                      (\n                        x //availableSizes is an array\n                      ) => (\n                        <span>\n                          {' '}\n                          <button className='button'>{x}</button>\n                        </span>\n                      )\n                    )}\n                  </p>\n\n                  <div className='product-price'>\n                    <div>{formatCurrency(product.price)}</div>\n                    <button\n                      className='button primary'\n                      onClick={() => {\n                        //before closingModal make sure have this.props.addToCart method\n                        this.props.addToCart(product);\n                        this.closeModal();\n                      }}\n                    >\n                      Add To Cart\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </Zoom>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n//redux part\n// export default connect((state) => ({ products: state.products.items }), { //getting access to list of products coming from server\n//   fetchProducts,\n// })(Products);\n\n/*\nCONNECT is a function that takes 2 params\n1. function that accepts state and => return an obj that defines which part of redux state are we going to use === products === state.products\n2. list of actions\n\nconnect func => returns another function which as paramter takes the component that we are connecting here ==== Product/js\n\nin JSON.data we need to set a proxy\nserver is localhost:5000\n*/\n"]},"metadata":{},"sourceType":"module"}