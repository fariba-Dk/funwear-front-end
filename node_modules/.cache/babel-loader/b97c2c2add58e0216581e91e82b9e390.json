{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from \"redux-thunk\";\nimport { productsReducer } from \"./reducers/productReducers\"; //it needs to be in {} bc/ it is not a default export it is a NAME EXPORT === NO DEFAULT\n\nconst initialState = {}; //define initial state\n//IF THIS EXISTS WE USE IT OR WE USE DEFAULT COMPOSE FUNCTION\n//THIS SENDS TO REDUX DEV TOOL AND MONITORE ALL \n\nconst composeEnhancer = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose; //COMPOSE ALL MIDDLEWARE\n//store accepts multiple params\n//we combine all reducers together\n\nconst store = createStore(combineReducers({\n  products: productsReducer\n}), initialState, //we have to use redux-thunk. bc inside of our actions we are sending async request to server to get data so WE USE THUNK TO HANDLE IT\n//WE COMPOSE ALL MIDDLEWARES TOGETHER\ncomposeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/store.js"],"names":["createStore","applyMiddleware","compose","combineReducers","thunk","productsReducer","initialState","composeEnhancer","window","_REDUX_DEVTOOLS_EXTENSION_COMPOSE_","store","products"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,EAA+CC,eAA/C,QAAqE,OAArE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAAQC,eAAR,QAA8B,4BAA9B,C,CAA4D;;AAE5D,MAAMC,YAAY,GAAG,EAArB,C,CAAwB;AACxB;AACA;;AACA,MAAMC,eAAe,GAAGC,MAAM,CAACC,kCAAP,IAA6CP,OAArE,C,CAA6E;AAE7E;AACA;;AACA,MAAMQ,KAAK,GAAGV,WAAW,CACvBG,eAAe,CAAC;AACdQ,EAAAA,QAAQ,EAAEN;AADI,CAAD,CADQ,EAIvBC,YAJuB,EAKvB;AACA;AACAC,eAAe,CAACN,eAAe,CAACG,KAAD,CAAhB,CAPQ,CAAzB;AAUA,eAAeM,KAAf","sourcesContent":["import {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport thunk from \"redux-thunk\"\n\nimport {productsReducer} from \"./reducers/productReducers\"; //it needs to be in {} bc/ it is not a default export it is a NAME EXPORT === NO DEFAULT\n\nconst initialState = {};//define initial state\n//IF THIS EXISTS WE USE IT OR WE USE DEFAULT COMPOSE FUNCTION\n//THIS SENDS TO REDUX DEV TOOL AND MONITORE ALL \nconst composeEnhancer = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;//COMPOSE ALL MIDDLEWARE\n\n//store accepts multiple params\n//we combine all reducers together\nconst store = createStore(\n  combineReducers({\n    products: productsReducer,\n  }),\n  initialState,\n  //we have to use redux-thunk. bc inside of our actions we are sending async request to server to get data so WE USE THUNK TO HANDLE IT\n  //WE COMPOSE ALL MIDDLEWARES TOGETHER\n  composeEnhancer(applyMiddleware(thunk))\n)\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}