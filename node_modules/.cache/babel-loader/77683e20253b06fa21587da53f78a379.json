{"ast":null,"code":"var _jsxFileName = \"/Users/faribadadko/Documents/funwear-front-end/funwear-fashion/src/components/Cart.js\";\nimport React, { Component } from 'react';\nimport formatCurrency from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Cart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.createOrder = e => {\n      e.preventDefault();\n      const order = {\n        name: this.state.name,\n        email: this.state.email,\n        address: this.state.address,\n        cartItems: this.props.cartItems\n      };\n      this.props.createOrder(order);\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      address: '',\n      showCheckout: false\n    };\n  }\n\n  render() {\n    const {\n      cartItems\n    } = this.props; //deconstructing assignment\n    //from parent component,we get cartItems here, if method\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [cartItems.length === 0 ?\n      /*#__PURE__*/\n      //1st div: showing cart-data\n      //if cartItem is empty\n      //using 2 className here 1. cart 2. cart-header\n      _jsxDEV(\"div\", {\n        className: \"cart cart-header\",\n        children: \"Cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      //else if cart is not empty => show num of items\n      _jsxDEV(\"div\", {\n        className: \"cart cart-header\",\n        children: [\"You have \", cartItems.length, \" in the cart\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"cart-items\",\n            children: cartItems.map((item //2nd div: showing cart-data\n            ) =>\n            /*#__PURE__*/\n            //we map thru cartItems and convert cartItems to li elms; here we set key=item._id and inside the li we need to form rows for: image & title & price - all with dif <div> + a button to remove any items - IMP: make it an arrow func\n            //NOTE: we use item which is element of cartItems not the cartItems itself\n            _jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.image,\n                  alt: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"right\",\n                  children: [formatCurrency(item.price), \" x \", item.count, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button\",\n                    onClick: () => this.props.removeFromCart(item),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), cartItems.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Total:\", ' ', formatCurrency( //use reduce method to \n                cartItems.reduce((a, c) => a + c.price * c.count, 0))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  this.setState({\n                    showCheckout: true\n                  });\n                },\n                className: \"button primary\",\n                children: \"Proceed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), this.state.showCheckout && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.createOrder,\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"form-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"email\",\n                    type: \"email\",\n                    required: true,\n                    onChange: this.handleInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"name\",\n                    type: \"text\",\n                    required: true,\n                    onChange: this.handleInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"address\",\n                    type: \"text\",\n                    required: true,\n                    onChange: this.handleInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button primary\",\n                    type: \"submit\",\n                    children: \"Checkout\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/faribadadko/Documents/funwear-front-end/funwear-fashion/src/components/Cart.js"],"names":["React","Component","formatCurrency","Cart","constructor","props","handleInput","e","setState","target","name","value","createOrder","preventDefault","order","state","email","address","cartItems","showCheckout","render","length","map","item","image","title","price","count","removeFromCart","_id","reduce","a","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport formatCurrency from '../util';\n\nexport default class Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      address: '',\n      showCheckout: false,\n    };\n  }\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  createOrder = (e) => {\n    e.preventDefault();\n    const order = {\n      name: this.state.name,\n      email: this.state.email,\n      address: this.state.address,\n      cartItems: this.props.cartItems,\n    };\n    this.props.createOrder(order);\n  };\n  render() {\n\n    const { cartItems } = this.props; //deconstructing assignment\n    //from parent component,we get cartItems here, if method\n    return (\n      <div>\n        {cartItems.length === 0 ? (//1st div: showing cart-data\n          //if cartItem is empty\n          //using 2 className here 1. cart 2. cart-header\n          <div className='cart cart-header'>Cart is empty</div>\n        ) : (\n          //else if cart is not empty => show num of items\n          <div className='cart cart-header'>\n            You have {cartItems.length} in the cart{' '}\n          </div>\n        )}\n        <div>\n          <div className='cart'>\n            <ul className='cart-items'>\n              {cartItems.map(\n                (\n                  item //2nd div: showing cart-data\n                ) => (\n                  //we map thru cartItems and convert cartItems to li elms; here we set key=item._id and inside the li we need to form rows for: image & title & price - all with dif <div> + a button to remove any items - IMP: make it an arrow func\n                  //NOTE: we use item which is element of cartItems not the cartItems itself\n                  <li key={item._id}>\n                    <div>\n                      <img src={item.image} alt={item.title}></img>\n                    </div>\n                    <div>\n                      <div>{item.title}</div>\n                      <div className='right'>\n                        {formatCurrency(item.price)} x {item.count}{' '}\n                        <button\n                          className='button'\n                          onClick={() => this.props.removeFromCart(item)}\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n                  </li>\n                )\n              )}\n            </ul>\n          </div>\n          {cartItems.length !== 0 && (\n            <div>\n              <div className='cart'>\n                <div className='total'>\n                  <div>\n                    Total:{' '}\n                    {formatCurrency(\n                      //use reduce method to \n                      cartItems.reduce((a, c) => a + c.price * c.count, 0)\n                    )}\n                  </div>\n                  <button\n                    onClick={() => {\n                      this.setState({ showCheckout: true });\n                    }}\n                    className='button primary'\n                  >\n                    Proceed\n                  </button>\n                </div>\n              </div>\n              {this.state.showCheckout && (\n                <div className='cart'>\n                  <form onSubmit={this.createOrder}>\n                    <ul className='form-container'>\n                      <li>\n                        <label>Email</label>\n                        <input\n                          name='email'\n                          type='email'\n                          required\n                          onChange={this.handleInput}\n                        ></input>\n                      </li>\n                      <li>\n                        <label>Name</label>\n                        <input\n                          name='name'\n                          type='text'\n                          required\n                          onChange={this.handleInput}\n                        ></input>\n                      </li>\n                      <li>\n                        <label>Address</label>\n                        <input\n                          name='address'\n                          type='text'\n                          required\n                          onChange={this.handleInput}\n                        ></input>\n                      </li>\n                      <li>\n                        <button className='button primary' type='submit'>\n                          Checkout\n                        </button>\n                      </li>\n                    </ul>\n                  </form>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}