{"ast":null,"code":"// import React, { Component } from 'react';\n// import formatCurrency from '../util';\n// import Fade from 'react-reveal/Fade';\n// import Modal from 'react-modal';\n// import Zoom from 'react-reveal/Zoom';\n// import { connect } from 'react-redux';\n// import { fetchProducts } from '../actions/productActions';\n// //for modals we need to have 2 state show or hide\n// class Products extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       product: null,\n//       //if product exists show it else if null do not show modal\n//       //create an onClick for image === HAS TO BE AN ARROW FUNC\n//       //openModal takes parameter (product) and prefix with this\n//       //we need a method function openModal\n//     };\n//   }\n//   componentDidMount(){//call fetchProducts from props\n//     this.props.fetchProducts();\n//   }\n//   openModal = (product) => {\n//     this.setState({ product });\n//     //by running this we set as the product of the stat of the component\n//   };\n//   closeModal = () => {\n//     this.setState({ product: null });\n//   };\n//   render() {\n//     const { product } = this.state; //use constructor assignment\n//     return (\n//       //implement product list - arr - map method\n//       <div>\n//         <Fade bottom cascade={true}>\n//           {!this.props.products ? (\n//             <div>Loading...</div>\n//           ) : ( //conditional rendering => if\n//             <ul className='products'>\n//               {this.props.products.map((product) => (\n//                 // //get list of products as props from parent comp\n//                 <li key={product._id}>\n//                   <div className='product'>\n//                     <a\n//                       href={'#' + product._id}\n//                       onClick={() => this.openModal(product)}\n//                     >\n//                       <img src={product.image} alt={product.title}></img>\n//                       <p>{product.title}</p>\n//                     </a>\n//                     <div className='product-price'>\n//                       <div>{formatCurrency(product.price)}</div>\n//                       <button\n//                         className='button-primary'\n//                         onClick={() => this.props.addToCart(product)}\n//                         className=\"button primary\"\n//                       >\n//                         Add To Cart\n//                       </button>\n//                     </div>\n//                   </div>\n//                 </li>\n//               ))}\n//             </ul>\n//           )}\n//         </Fade>\n//         {product && ( //when there's a product this modal is rendered ** also make sure to create a button to close it using 'x'\n//           <Modal isOpen={true} onRequestClose={this.closeModal}>\n//             <Zoom>\n//               <button className='close-modal' onClick={this.closeModal}>\n//                 x\n//               </button>\n//               <div className='product-details'>\n//                 <img src={product.image} alt={product.title}></img>\n//                 <div className='product-details-description'>\n//                   <p>\n//                     <strong>{product.title}</strong>\n//                   </p>\n//                   <p>{product.description}</p>\n//                   <p>\n//                     Available Sizes:{' '}\n//                     {product.availableSizes.map((x) =>(//availableSizes is an array\n//                         <span>\n//                           {' '}\n//                           <button className='button'>{x}</button>\n//                         </span>\n//                       ))}\n//                   </p>\n//                   <div className='product-price'>\n//                     <div>{formatCurrency(product.price)}</div>\n//                     <button\n//                       className='button primary'\n//                       onClick={() => {\n//                         //before closingModal make sure have this.props.addToCart method\n//                         this.props.addToCart(product);\n//                         this.closeModal();\n//                       }}\n//                     >\n//                       Add To Cart\n//                     </button>\n//                   </div>\n//                 </div>\n//               </div>\n//             </Zoom>\n//           </Modal>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n// //redux part\n// export default connect((state) => ({ products: state.products.items }), { //getting access to list of products coming from server\n//   fetchProducts,\n// })(Products);\n\n/*\nCONNECT is a function that takes 2 params\n1. function that accepts state and => return an obj that defines which part of redux state are we going to use === products === state.products\n2. list of actions\n\nconnect func => returns another function which as paramter takes the component that we are connecting here ==== Product/js\n\nin JSON.data we need to set a proxy\nserver is localhost:5000\n*/","map":{"version":3,"sources":["/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/components/Products.js"],"names":[],"mappingssourcesContent":["\n\n// import React, { Component } from 'react';\n// import formatCurrency from '../util';\n// import Fade from 'react-reveal/Fade';\n// import Modal from 'react-modal';\n// import Zoom from 'react-reveal/Zoom';\n// import { connect } from 'react-redux';\n// import { fetchProducts } from '../actions/productActions';\n\n// //for modals we need to have 2 state show or hide\n// class Products extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       product: null,\n//       //if product exists show it else if null do not show modal\n//       //create an onClick for image === HAS TO BE AN ARROW FUNC\n//       //openModal takes parameter (product) and prefix with this\n//       //we need a method function openModal\n//     };\n//   }\n//   componentDidMount(){//call fetchProducts from props\n//     this.props.fetchProducts();\n//   }\n//   openModal = (product) => {\n//     this.setState({ product });\n//     //by running this we set as the product of the stat of the component\n//   };\n//   closeModal = () => {\n//     this.setState({ product: null });\n//   };\n//   render() {\n//     const { product } = this.state; //use constructor assignment\n//     return (\n//       //implement product list - arr - map method\n//       <div>\n//         <Fade bottom cascade={true}>\n//           {!this.props.products ? (\n//             <div>Loading...</div>\n//           ) : ( //conditional rendering => if\n//             <ul className='products'>\n//               {this.props.products.map((product) => (\n//                 // //get list of products as props from parent comp\n//                 <li key={product._id}>\n//                   <div className='product'>\n//                     <a\n//                       href={'#' + product._id}\n//                       onClick={() => this.openModal(product)}\n//                     >\n//                       <img src={product.image} alt={product.title}></img>\n//                       <p>{product.title}</p>\n//                     </a>\n//                     <div className='product-price'>\n//                       <div>{formatCurrency(product.price)}</div>\n//                       <button\n//                         className='button-primary'\n//                         onClick={() => this.props.addToCart(product)}\n//                         className=\"button primary\"\n//                       >\n//                         Add To Cart\n//                       </button>\n//                     </div>\n//                   </div>\n//                 </li>\n//               ))}\n//             </ul>\n//           )}\n//         </Fade>\n//         {product && ( //when there's a product this modal is rendered ** also make sure to create a button to close it using 'x'\n//           <Modal isOpen={true} onRequestClose={this.closeModal}>\n//             <Zoom>\n//               <button className='close-modal' onClick={this.closeModal}>\n//                 x\n//               </button>\n//               <div className='product-details'>\n//                 <img src={product.image} alt={product.title}></img>\n//                 <div className='product-details-description'>\n//                   <p>\n//                     <strong>{product.title}</strong>\n//                   </p>\n\n//                   <p>{product.description}</p>\n\n//                   <p>\n//                     Available Sizes:{' '}\n//                     {product.availableSizes.map((x) =>(//availableSizes is an array\n//                         <span>\n//                           {' '}\n//                           <button className='button'>{x}</button>\n//                         </span>\n//                       ))}\n//                   </p>\n\n//                   <div className='product-price'>\n//                     <div>{formatCurrency(product.price)}</div>\n//                     <button\n//                       className='button primary'\n//                       onClick={() => {\n//                         //before closingModal make sure have this.props.addToCart method\n//                         this.props.addToCart(product);\n//                         this.closeModal();\n//                       }}\n//                     >\n//                       Add To Cart\n//                     </button>\n//                   </div>\n//                 </div>\n//               </div>\n//             </Zoom>\n//           </Modal>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n// //redux part\n// export default connect((state) => ({ products: state.products.items }), { //getting access to list of products coming from server\n//   fetchProducts,\n// })(Products);\n\n/*\nCONNECT is a function that takes 2 params\n1. function that accepts state and => return an obj that defines which part of redux state are we going to use === products === state.products\n2. list of actions\n\nconnect func => returns another function which as paramter takes the component that we are connecting here ==== Product/js\n\nin JSON.data we need to set a proxy\nserver is localhost:5000\n*/\n"]},"metadata":{},"sourceType":"module"}