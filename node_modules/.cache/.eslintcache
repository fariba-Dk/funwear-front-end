[{"/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/index.js":"1","/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/App.js":"2","/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/components/Products.js":"3","/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/components/Filter.js":"4","/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/components/Cart.js":"5","/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/util.js":"6"},{"size":395,"mtime":1624382240850,"results":"7","hashOfConfig":"8"},{"size":5621,"mtime":1624897540460,"results":"9","hashOfConfig":"8"},{"size":4839,"mtime":1624897160525,"results":"10","hashOfConfig":"8"},{"size":1272,"mtime":1624471735924,"results":"11","hashOfConfig":"8"},{"size":7966,"mtime":1624897160524,"results":"12","hashOfConfig":"8"},{"size":145,"mtime":1624400596439,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1jyu0kh",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/index.js",[],["28","29"],"/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/App.js",[],"/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/components/Products.js",["30"],"import React, { Component } from 'react';\nimport formatCurrency from '../util';\nimport Fade from 'react-reveal/Fade';\nimport Modal from 'react-modal';\nimport Zoom from 'react-reveal/Zoom';\n\n//for modals we need to have 2 state show or hide\nexport default class Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: null,\n      //if product exists show it else if null do not show modal\n      //create an onClick for image === HAS TO BE AN ARROW FUNC\n      //openModal takes parameter (product) and prefix with this\n      //we need a method function openModal\n      showPromo: true,\n    };\n  }\n  // componentDidMount(){//call fetchProducts from props\n  //   this.props.fetchProducts();\n  // }\n  openModal = (product) => {\n    this.setState({ product });\n    //by running this we set as the product of the stat of the component\n  };\n  closeModal = () => {\n    this.setState({ product: null });\n  };\n  render() {\n    const { product, showPromo } = this.state; //use constructor assignment\n    return (\n      //implement product list - arr - map method\n      <div>\n        <Modal isOpen={showPromo} style={{ textAlign: 'center' }}>\n          <button onClick={() => this.setState({ showPromo: false })}>x</button>\n          <img\n            src='/images/discount-pic.gif'\n            alt='discount promo'\n            style={{ width: '100%' }}\n          />\n        </Modal>\n        <Fade bottom cascade={true}>\n          <ul className='products'>\n            {this.props.products.map((product) => (\n              // //get list of products as props from parent comp\n              <li key={product._id}>\n                <div className='product'>\n                  <a\n                    href={'#' + product._id}\n                    onClick={() => this.openModal(product)}\n                  >\n                    <img src={product.image} alt={product.title}></img>\n                    <p>{product.title}</p>\n                  </a>\n                  <div className='product-price'>\n                    <div>{formatCurrency(product.price)}</div>\n                    <button\n                      className='button-primary'\n                      onClick={() => this.props.addToCart(product)}\n                      className='button primary'\n                    >\n                      Add To Cart\n                    </button>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </Fade>\n        {product && ( //when there's a product this modal is rendered ** also make sure to create a button to close it using 'x'\n          <Modal isOpen={true} onRequestClose={this.closeModal}>\n            <Zoom>\n              <button className='close-modal' onClick={this.closeModal}>\n                x\n              </button>\n              <div className='product-details'>\n                <img src={product.image} alt={product.title}></img>\n                <div className='product-details-description'>\n                  <p>\n                    <strong>{product.title}</strong>\n                  </p>\n\n                  <p>{product.description}</p>\n\n                  <p>\n                    Available Sizes:{' '}\n                    {product.availableSizes.map(\n                      (\n                        x //availableSizes is an array\n                      ) => (\n                        <span>\n                          {' '}\n                          <button className='button'>{x}</button>\n                        </span>\n                      )\n                    )}\n                  </p>\n\n                  <div className='product-price'>\n                    <div>{formatCurrency(product.price)}</div>\n                    <button\n                      className='button primary'\n                      onClick={() => {\n                        //before closingModal make sure have this.props.addToCart method\n                        this.props.addToCart(product);\n                        this.closeModal();\n                      }}\n                    >\n                      Add To Cart\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </Zoom>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n//redux part\n// export default connect((state) => ({ products: state.products.items }), { //getting access to list of products coming from server\n//   fetchProducts,\n// })(Products);\n\n/*\nCONNECT is a function that takes 2 params\n1. function that accepts state and => return an obj that defines which part of redux state are we going to use === products === state.products\n2. list of actions\n\nconnect func => returns another function which as paramter takes the component that we are connecting here ==== Product/js\n\nin JSON.data we need to set a proxy\nserver is localhost:5000\n*/\n","/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/components/Filter.js",[],"/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/components/Cart.js",[],"/Users/faribadadko/Documents/FunWearðŸŒ¼Fashion/funwear-front-end/src/util.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":61,"column":23,"nodeType":"37","messageId":"38","endLine":61,"endColumn":49},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation"]